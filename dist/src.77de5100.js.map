{"version":3,"sources":["view/CanvasView.ts","sprites/Brick.ts","sprites/Paddle.ts","sprites/Ball.ts","sprites/index.ts","Collision.ts","setup.ts","helpers.ts","index.ts"],"names":[],"mappings":";;AQAA;;AACA;;AACA;AHCA,AEHA,ADAA,AHEA,AFAA,ACAA,AFAA,IKCA,AFDA,AFAA,ACAA,AFAA,IGAA,CFAA,CCAA,GGCA,CLDA;AKCA,AGCA,ALFA,AFAA,ACAA,AFAA;AKCA,AEOA,ADTA,AHCA,AFAA,ACAA,AFAA,YKCA,AFDA,AFAA,ACAA,AFAA;AKCA,AGEA,ALCE,AFDA,ACEA,AFEA,WKNF,AFGE,AFDA,ACEA,AFEA,IGHA,CACE,AFFF,CACU,ACCV,CACU,EGLZ,CFGE,AHGA,CAAY,CKNd,AFKY,ADDV,CG6CD,CH3CW,EDJV,EAEU,EEDV,CHGA,CGAU,CHAoB,EEF9B,EAGU,EDLV,CECA,CFEU,CEER,KAJF,EAIe,AFLf,ACEA,EDEU,ACEA,QAJV,EAKE,CDPF,EAKE,ECHF,EAKe,CDPf,EAKe;AKRjB,AHMY,AFFA,ACCV,AFGE,QEHF,CCCU,AFFA,ADIH,IEHP,EFGE,CEHF,CCCU,CHEM,CCJN,CEEA,ADDV,EDDU,IDIc,CAAC,CGFf,IFFA,QDIM,CAAuB,UAAvB,CAAd;AKNF,AGGF,ALEY,AFFA,ADIR,EKPF,OFKU,AFFA,ADIH,EKPP,CAAA,ILOE,CGFQ,EHEO,CGFP,AFFA,CIHV,CAAA,CJGU,CDIY,IGFZ,EHEO,CAAY,GCJnB,IIHV,GAAA,ALOiB,CAAuB,IAAvB,CAAf,IKPe,IAAjB,EAA6B,KAA7B,EAAyC;AACvC,ACFJ,AHCU,AFIE,ACAA,AFIR,QKNE,CFFI,AFIE,ACAA,AFIH,GKNC,CAAC,CHEC,EGFN,CAAS,AJEH,ACAA,CGFN,AFFI,EFIE,CIFO,AFFqB,AHQpC,CEJQ,EFIY,CGRoB,CEEpB,CAAC,CJEb,EIFO,AFFqB,CEEX,CAAV,AFFT,AHQsB,CAAC,EKNA,KAAK,CAAC,KAAjC,ALMkB,CAAuB,GKLzC,IAAI,CAAC,ALKa,CAApB,EKLE,CAAS,CAAT,GAAa,IAAI,CAAC,KAAlB,GAA0B,KAAK,CAAC,GAAN,CAAU,CADpC,IAEA,IAAI,CAAC,GAAL,CAAS,CAAT,GAAa,KAAK,CAAC,GAAN,CAAU,CAAV,GAAc,KAAK,CAAC,MAFjC,IAGA,IAAI,CAAC,GAAL,CAAS,CAAT,GAAa,IAAI,CAAC,MAAlB,GAA2B,KAAK,CAAC,GAAN,CAAU,CAJvC,EAKE;AACA,AGON,ALNI,AFHQ,ACAA,AFIR,SGDK,AFHG,ACAA,AFIH,IKFI,CLET,GKFE,AFCF,AHCa,GGDG,AFHR,ACAA,GDAA,ACAA,EFIa,CAAC,EGDtB,MFHQ,ACAA,KFIK,CAAuB,QAAvB,CAAb;AKDC,ACRL,AHSI,AFVM,ACOE,AFIR,SGDK,AFVC,ACOE,AFIH,IAAL,GAAY,CGDZ,EFVM,CEUU,CDHR,CDP6B,ECO7B,AFIY,CAAC,CCXoB,EEUzC,GFVqC,EAA/B,GCOE,EFII,CAAuB,OAAvB,CAAZ;AGAA,AFFA,ACDQ,AFIT,SGDM,AFFA,ACDG,KCGR,GAAa,ADHL,EDCR,CCDQ,EDCU,MCDV,IDCR;AICA,AFEE,AFFF,ACVM,MCYJ,CAAC,EAAE,AFFA,ACVC,EGUC,GFCM,EEDb,IJAA,ACVM,GDUa,ACVmB,IAAI,KAAJ,EDUtC,ACVM;AGWP,AGb8C,ALe3C,AFFF,ADGF,EAAA,CKbA,GFYI,CAAC,EAAE,AFFA,CEEC,EHCR,CAAA,ICHE,GAAgB,EDGlB,CAAA,KCHE,ADGF,GAAA,YAAA;AQGF,AFdA,AHQiB,AFCb,ACwCF,IMnCE,CLNA,IFCK,ACwCP,GMnCU,GAAG,KAAf,APLI,ACwCF,GDxCqB,ACwCP,UAAC,CDxCb,ACwCY,EAAiB;AGvC/B,AGKF,AFdA,AHWI,AFFA,ACwCA,EGxCF,EGKE,KAAK,ALHA,AFFA,CCwCD,CGxCN,AHwCO,CGxCP,AGKU,ANmCF,CMnCV,GNmCQ,ECtCJ,CAAe,AFFf,CAAgB,CIAlB,AHwCiB,CGxCjB,AFEE,CFFA,EEEqB,CFFC,IEEtB,CFFA,CCwCI,IAA0B,CAAC,CAAC,CGxClC,EHwCgC,CGxChC,IHwC0C,MGxCxB,IAAlB,CHwCE,CGxC4B,CHwCyB,KGxCvD,AHwC2D,CAAC,CGxCf,OHwCU,GAAgB,KAAhB;AGxCvD,ACRF,AHWG,AFFA,ACwCC,AFvCA,IMVE,CNUF,EAAA,CKFF,ECRU,AJiDJ,AFvCJ,CEuCK,CAAC,CGzCR,ACRuC,ENUhC,CKFP,AHyCM,IGzCN,CCR+C,AJiD9B,CIjD+B,ANU9C,MAAY,IAAZ,CEuCI,EIjDiC,CAAuB,ANUhD,CEuCmB,CAAC,AFvCpB,CEuCqB,GAAF,CFvCnB,IEuC6B,CIjDJ,ANUzB,CMVhB,ANUI,EMRJ,CNQgB,KAAA,CAAZ,CEuCA,EACE,AFxCU,EAAA,CAAE,EEwCR,CAAC,MFxCK,CAAY,CAAZ,CEwCV,CFxCyB,CAAf,CEwCO,CFxCW,IEwC5B,CFxCiC,MAAL,CAAY,KAA9B,EAAqC,KAAK,MAAL,CAAY,MAAjD,CAAZ;AQKJ,ANoCG,AFxCA,GAFD,EEsCA,IMhCO,WAAT,CAAqB,IAArB,EAAqC;AHNjC,AGOF,AFbK,AHUL,AFFA,EOKA,ALHA,AFFA,EKRW,EEaP,CAAC,CHPC,AFIN,AFFA,CEEA,AFFA,MOKA,CAAc,CHPC,ACNS,GDMN,ACNS,EAAtB,CHUL,AFFA,CEEI,AFFA,CIFF,GGOF,ALHI,CAAA,AFFA,CAAA,QEEJ,CFFA,CEEI,CFFA,MEEJ,CFFA,CEES,CFFA;AIAP,AGMF,ANoCA,AE7DF,AJqBE,EQIA,ARJA,EKFE,KFEF,AFFA,AC0CA,CG1CQ,AGMA,CHNC,CLET,CQIW,ARJX,KKFE,AGMF,CHNiB,GH0CjB,AFxCA,CAAA,CGAA,AFFA,CC0CgB,IG1CE,KAAD,CH0CA,CG1CQ,AH0CT,CG1CC,CH0CgB,AFxCjC,CKF0B,ELE1B,UAAgB,aAAhB,EAAyD;AKDrD,AERA,ACcL,AFdM,AHUH,AFFA,AC0CA,AFzCF,IMTW,INSX,COTc,CFQN,AH0CF,CAAC,CAAC,CCxCC,AFFA,ADCT,CMTqB,CDQT,CAAC,AH0CP,AFzCN,CMTwB,CHUV,AFFA,CKRT,CNSL,COTI,ALkDa,GKlDS,EJUxB,EFFA,IIAM,AH0CF,CG1CwB,GH0CE,CG1CxB,AH0CyB,CAAC,CG1CE,EH0CJ,GG1CxB,CAAJ,CH0CsC,CG1CE,UH0C1C,EAAqD,KAAI,CAAC,QAAL,GAAgB,IAAhB;AGzCjD,AERN,AJUC,AFFA,AC0CC,AE9DJ,KDoBW,AFFA,GIEH,CERC,CLkDD,CAAC,CG1CG,AH0CF,CG1CG,GH0CL,KAAW,CKlDJ,MAAN,CFQD,AERc,ILkDd,IAA2B,CAAC,CKlDb,ALkDc,GKlDf,ALkDa,EKlDP,GLkDiB,IKlDvB,EAAe,MLkDjC,EKlDkB,ALmDhB,EKnDuC,GLmDnC,CAAC,SAAL,GAAiB,IAAjB;AKlDF,ACcJ,AFfO,AJoDJ,IIpDU,CJgDX,GK/CQ,CCcD,EDdI,GAAG,ADDO,GAAG,CCCN,CAAC,ACcrB,AFfO,CEea,CLPT,AFFA,GMLK,ACchB,CDd2B,CAAC,ACcQ,QDdA,GAAG,CAAZ,IAAiB,iBAA5B,CAAZ;AFSI,AERJ,ACcF,AJ3BF,EI2BE,IAAI,CAAC,CDdG,GAAG,CFQD,EERI,CCcd,CAAc,CHNC,CAAC,IERM,EFQZ,CERe,CCczB,GHN2B,CAArB,EAAwB,UER5B;AFSM,AEPN,ACaF,AFhBK,AHOI,AFFA,ACLP,AFQA,EQQF,CLTA,AFFA,CKLW,CNQT,EAAA,COLM,CAAC,ALHF,CGUC,AGMA,ARRN,EOLU,CCaD,CNhBT,CFQK,CKEO,CAAC,ACVS,AJAT,CMgBf,EFhB2B,ANQzB,CMRG,CJAH,CGUM,CAAc,CAAd,CLFI,CKEa,CAAjB,ELFN,IAAU,COLgB,CPKhB,EOLmB,GPKnB,COLuB,IPKvB,CAAV,GAAU,KAAA,CAAV,GAAU,EAAA,CAAE,COLmC,ePKrC,CAAmB,IOLA,CAA7B,EPKU,EAA4B,YAAA;AKGjC,AEPL,ACaH,ALNC,AFHA,ACPE,AFO4C,EGG9C,AFHA,MMJQ,AJOR,AFHA,CICM,AELG,AJOT,AFHA,ACPO,GKGK,CPIkC,EKGjC,KHVX,GCUF,AFHA,ACPqB,CCUjB,AFHA,EDAuD,CAAC,CGGxD,CAAA,AFHA,CAAA,EDAuD,CAAb,CEP5C,CKG0B,GAAG,AJO/B,CFHA,CEGI,CFHA,CMJ+B,MJOnC,CFHA,CEGU,CFHA,aMJwC,oBAAnB,CAA7B;AFQM,AENN,ADLG,AJCH,AFM+D,IMPtD,CNOC,CAAV,EOFI,CJKN,AFHA,ACNO,CGUC,KAAK,AENA,ADLS,CDWR,ECXW,ECKP,CAAhB,ALJA,CGUM,CENa,CDLU,AHU/B,AFHA,ACNsB,EGUE,CAAhB,ACVN,GCI0B,CDJtB,CAAC,CCIc,GLJnB,CIAA,CAAW,CAAC,MAAM,CAAC,KAAP,GAAe,aAAa,GAAG,CAAhC,IAAqC,UAAhD,IAA8D,aADjC,GAE7B,GAFG;ADYE,AELL,ACWJ,ALPI,AFHA,ACNA,AFMD,GAFD,MQYO,ANhBA,EKKL,EJIO,AFHA,IOUX,ANhBI,CMiBF,ALRc,AFHA,ECNI,EMgBpB,EAEE,CDbE,CACK,AJGL,EDTA,CKKA,ANCA,COUJ,CDVY,CACN,ACYJ,IDZQ,ECSV,EAIE,IAJF,EAKE,EDdI,CACE,MCQR,EAKsB,UDdhB,EAEE,mBAFF,EAGE;AAAE,ACaR,AFtBK,AHSJ,AFHA,ACNC,EMsBF,EFtBW,CHOD,AFHA,CMKF,ACaJ,CDbK,ACaJ,EDbI,ALTF,CKSD,ECaN,IFtBuB,CJArB,EIAwB,CJAR,KIAc,AJA9B,GICA,IAAI,CAAC,KAAL,CAAW,CAAC,MAAM,CAAC,MAAP,GAAgB,aAAa,GAAG,CAAjC,IAAsC,UAAjD,IAA+D,aADjC,GAE9B,EAFG;ADUC,AEDK,ACcX,ANtBE,AFMF,EQgBA,ARhBA,IOEW,ACcP,CDdQ,ACcP,CHbC,CEDM,ALRL,GFMP,CAAA,IKGe,AGaf,CAAgB,ANtBd,EGSgB,CFHR,AFHA,ACHS,CFMnB,CAAA,CKGM,AGaN,ENtBE,MFMF,GAAA,UAAU,KAAV,EAAuB;AKIlB,AEFC,ACeN,AFrBK,AJDH,AFMA,EQgBF,EFrBW,CCGP,CCkBA,CDdE,ACcD,ENtBE,AFMA,OMLgB,CEqBvB,CAAgB,CFrBU,CJDxB,CAAiB,AFMjB,CMLG,EEqBL,ANtBE,EFMsB,COEL,ALRM,IFMI,CEN3B,EKQI,CAJF,EAKE,MPHkB,CAAkB,SAAlB,GAA8B,COGnC,IPHwC,CAAC,EOGtD,CALF,CADM,CADR,CAAA,EPIoD,EAApD;AKIC,AEEF,ACWD,ALlBU,AFHA,ACAR,AFKD,EQgBD,CD9BO,AJYP,AFHA,ADGA,CEHE,CGHA,AEaC,CCWC,CD9BG,AC8BF,CD9BL,ILSU,CAAC,IMqBX,CAAgB,IAAhB,ONrBE,CAA0B,SAA1B,EAAqC,KAAK,aAA1C;AGSA,AEEH,ACYC,AFvBK,AHOL,AFJA,ACFE,EMsBF,ALhBA,AFJA,EKHW,AJCT,EMsBE,CAAC,CLhBL,AFJA,CEIA,AFJA,EIMS,CHRC,CAAC,EMsBX,EFvBwB,GDStB,ACTyB,EAAtB,CHOL,AFJA,CEII,AFJA,IEIA,CAAA,AFJA,ACFF,CDEE,ACFwB,OAA1B,CCMF,CFJA,ACFqC,CCMjC,CFJA,GCFsC,CCM1C,CFJA,CEIO,CFJA,OCFL;AGSD,AHRA,AFKD,EAAA,CKbA,MFaA,AFJA,GDIA,CAAA,SAAA,CAAA,CGAA,AFJA,ODIA,GAAA,UAAS,IAAT,EAAqB;AQkBrB,AFxBK,AHOH,AFJA,ADIA,IMPS,EEyBR,GRlBI,GQkBE,CAAC,ALlBD,AFJA,ADIP,IMPsB,CHOV,AFJA,ADIE,EMPW,GAAtB,ANOgB,EQkBlB,CLlBD,AFJA,CDIc,CAAU,CQkBA,MAAM,CAAC,CRlBjB,EQkBU,CAAW,ARlBC,CQkBZ,GAAe,ARlBvC,CQkBA,IACC,MAAM,CAAC,aAAP,IAAwB,MAAM,CAAC,GAAP,CAAW,CAAX,GAAe,IAAI,CAAC,MAAL,CAAY,KAAZ,GAAoB,MAAM,CAAC,KAFrE,EAGE;AHhBF,AGiBE,ALpBD,AFJA,ACDD,AFKC,EKGD,AHRA,CFGA,CQsBE,CLtBK,AFJA,GCCP,CAAA,CMyBQ,CHjBR,AGiBS,CHjBT,SAAA,AGiBE,CHjBF,CHRA,CAAI,MAAA,CAAA,SGQJ,AHRA,EAAI,CGQJ,MHRA,EAAS,EGQU,IAAnB,EAA+B,MAA/B,EAA+C,IAA/C,EAA+D;AAC7D,AGiBD,AF5BI,IAAM,KJEX,OIFuB,GAAG,EAArB,AHKE,AFJA,GCCP;AGUE,AHTA,AFMF,EAAA,MKII,IAAI,ALJR,CKIS,AHVA,AFMT,GKII,CAAS,CAAT,AHVU,GGUG,CLJjB,CAAA,EKIqB,CAAC,GHVpB,EGUE,ELJJ,CKI8B,ELJ9B,IKIoC,CAAC,GAAP,CAAW,CAArC,ALJO,IKKP,CLLJ,EAAuC,CKK/B,CAAC,GAAL,CAAS,CAAT,GAAa,MAAM,CAAC,GAAP,CAAW,CAAX,GAAe,MAAM,CAAC,KADnC,IAEA,IAAI,CAAC,GAAL,CAAS,CAAT,GAAa,IAAI,CAAC,MAAlB,KAA6B,MAAM,CAAC,GAAP,CAAW,CAH1C,EAIE;AACA,AGaJ,AF7BK,AHIE,AFJA,ACGN,EM0BD,CLzBA,AFJA,CKAW,CJCF,CGeL,IAAI,CAAC,AGaA,CAAC,EF7BW,GAAG,CAAnB,SDgBD,GGaJ,CAA6B,IAA7B,EAAmC,MAAnC,EAA2C,IAA3C;AHZG,AGaH,ALtBA,AFLA,EEKA,AFLA,GIM+D,CAS7D,AGYI,ELtBN,AFLA,CEKA,AFLA,WO2BoB,CN7BX,EM6Bc,ALtBvB,AFLA,CEKI,AFLA,IEKA,CAAA,AFLA,CAAA,EO2B4B,CAAC,KLtBjC,CFLA,CEKI,CFLA,MEKJ,CFLA,CEKS,CKsBc,AP3Bd,CO2B0C,IAA5B,EAAkC,MAAlC,CAAvB;AF7BK,ANQH,IMRS,INQL,CGDN,AFLA,ADMO,IMRa,CNQlB,EMRqB,ANQT,EMRT,MHOL,AFLA;AO6BA,ALvBE,AFLA,ACHO,AFUP,GEVF,EFUE,CQqBE,CRrBF,GAAA,GGFO,AFLA,EDOF,GGFO,AFLA,EO4Bd,EAAoB,ARrBlB,KGFA,CFLA,ADOY,IAAZ,IAAY,EAAA,KAAA,KAAA,CAAZ,GAAY,KAAA,CAAZ,GAAY,EAAA,CAAE,SAAF,CACV,KAAK,CAAC,KADI,EAEV,KAAK,CAAC,GAAN,CAAU,CAFA,EAGV,KAAK,CAAC,GAAN,CAAU,CAHA,EAIV,KAAK,CAAC,KAJI,EAKV,KAAK,CAAC,MALI,CAAZ;AKQA,AGcA,AF/BG,AHQJ,AFLA,ACAD,AFaC,EEbD,CFGA,CQyBE,AF/BS,CHMF,AFLA,GIgBH,AHdN,CM4BO,AN5BP,GGcU,CAAC,AGcA,CAAT,CF/BoB,CDiBhB,CAAS,CAAT,ACjBmB,GDiBN,ACjBd,EJGL,CAAI,CGcmB,CAAC,IHdpB,CAAA,CGce,CAAY,KAAZ,EHdnB,CGcuC,CHdnC,GGcuC,CAAC,IHd5C,CGcM,CHdI,GGc2C,IAAI,CAAC,GAAL,CAAS,CAAT,GAAa,CAAhE,EAAmE;AACjE,AGcF,IAAA,EHdE,EGcE,CAAC,AN7BP,CGeQ,CAAC,OGcP,CAAe,EL1BR,AFLA,GO+BP,AN7BF,GGeI;AACD,AGcF,AFhCI,AJGH,AFcF,EAAA,EMjBW,CDMoD,CAa7D,MLFF,CEdS,AFcT,EMjBsB,GAAG,AJGX,GIHT,CNiBL,CAAA,OEdE,GFcF,GAAA,UAAW,MAAX,EAA0B;AGZjB,AFLA,ACIR,AFaD,GGZA,AFLA,ECEU,GFeV,KAAA,GAAA,IAAA;AQiBA,AFhCK,ALCL,EAAA,EKDW,EEgCP,EP/BJ,CAAA,CO+BQ,CAAC,GAAL,CAAS,CAAT,AFhCmB,GEgCN,AFhCoC,EJA3C,EMgCW,AP/BrB,CO+BsB,AP/BlB,KAAA,CO+Ba,AP/Bb,CO+ByB,MAA7B,EAAqC,AP/BrC,EAAI,MO+ByC,EP/B7C,CO+BgD,CP/BtC,GO+B2B;AHdnC,AGeF,AFhCA,AHMA,AHSE,EGTF,EHSE,CMfC,CEgCC,AL1BJ,CAAA,CEWM,CJjBN,CDeQ,CAAC,CKEC,AGeA,CHfC,AGeA,GHfL,AFXN,CEWe,AFXf,CEWM,ALFJ,CQiBE,ARjBa,EKEE,CAAjB,AClBmD,EDkB/B,AGeA,APhCtB,COgCA,EAAyB,ERjBP,IGTlB,CK0BgC,ARjBf,EGTjB,AHSuB,QQiBmB,CAAC,GL1B3C,CK0B0C,CAAjB,CAzBL,CA0BpB;AHfI,ACjBJ,AHME,AFNA,ACFQ,AFgBkB,GEhB5B,EIEG,CDiBC,GFXG,CEWC,CAAC,EJjBA,ADcmB,CGR1B,CAAW,CAAX,EFNY,ADckB,CGRf,AHQgB,CGRf,IGRmC,CHQ9B,EEWnB,EJjBF,ADc0B,CGRV,AHQ0B,CGRf,CAA3B,GHQ0B,CAAA;AKIzB,AGeH,AFhCA,AHMC,AFNA,ACCD,AFYkD,EEZlD,CCGA,EGJG,ALFO,ADeR,CQmBE,EN/BJ,CAAA,KM+BA,EAAc,OAAO,AN/BrB,CAAI,CIJiD,KJIjD,CAAA,GM+B4B,CAAC,IAAD,CAAlB,AN/Bd,EAAI,KAAJ,EAAO;AGiBN,AGgBD,AFjCA,ANaC,EQoBD,CHjCA,ALWA,EMXG,ILCH,ACDA,aDCW,COgCU,AFrCgC,CEqC/B,ANjCtB,IDCA,EAAyB,MOgCH;AAAM,AFhC5B,AHMA,AFLE,ACDA,ECMF,GGNG,CHMH,CAAA,IK0B4B,AP/BrB,ECDE,GCMT,CAAA,CDNc,CMgCsB,CAAC,EP/BnC,EO+BkC,CP/Bf,CO+BsB,ANhCzC,KDCA,CO+BkC,CL1BpC,CK0BmD,EL1BnD,IK0BoC,EAAuB,IAAvB,EAA6B,AL1BjE,SK0BoC,CAAR;AHf9B,AGe6E,AFrCtB,AHYnD,AFLD,ACDA,AFYH,CMlBO,EEqCgB,CAArB,CPpCU,ACGH,IGkBT,AFVS,AHMT,KGNI,CAAW,CAAX,EEUJ,CFVmB,AHMnB,CGNoB,KAAK,KAAL,CAAW,CAA3B;AEvCJ,AGiEC,ALzBE,AHzCH,CKCA,ALDA,EKCA,AFsCE,AHvCF,kBC6BY,ACGH;AIIF,IAAM,YAAY,GAA8B;AEgCvD,AF/BE,AHMA,AFdU,ACGH,ECWP,CFdA,ACGA,EIKG,CADkD,AHOrD,CAAA,EKyBO,OLzBP,CAAA,CKyBF,CAAmB,IAAnB,EAAmC,ALzBjC,GAAA,YAAA;AK0BA,AF/BA,AHME,AFRJ,ACAE,EMiCA,ANjCA,GIEG,CAFkD,CEiChD,CNjCL,CCQO,AFRT,ACAE,CMiCQ,CAAR,CLzBE,CAAS,CAAT,AFRJ,IEQkB,KAAK,ADRrB,CAAI,ICQY,CAAW,CAAzB,ADRE,CAAA,SAAJ,EAAI,OAAJ,EAAS;AMkCT,AF/BA,AHME,AF7CJ,CAAA,COsEE,CPtEF,EKuCK,CE+BC,AFlCiD,CEkChD,ELzBE,ADTP,GCSE,CAAS,CAAT,CKyBF,CAAc,EAAd,ALzBgB,KAAK,CDTrB,ICSgB,CAAW,CAAzB;AK0BF,AF/BA,AHMC,ADTC,EMkCF,CL5BA,EGHG,CE+BC,AFnCiD,CEmChD,MNlCI,GMkCT,CAAe,CAAf,ANlCc,WAAZ;AMoCF,AFhCA,AJHC,KIGE,AJLM,CMqCH,AFrC+C,CAKhD,QEgCU,GAAG,IAAI,oBAAJ,EAAlB;AAEA,AL5BF,MK4BQ,GL5BR,GK4Bc,CL5Bd,EK4BiB,APrCF,MCFJ,sBMuCT;AAEA,AFzCqD,AHpCvD,CGoCO,AHpCP,EG4CA,AH5CA,GK6EQ,IAAI,GAAG,IAAI,aAAJ,CACX,iBADW,EAEX,gBAFW,EAGX;AAAE,AN5CK,GAAT,CM4CI,CAAC,EAAE,kBAAL;AAAkB,ANxCpB,EAAA,EMwCoB,CAAC,EAAE,CNxCvB,CAAA,MCSa,QDTb,CAAI,MAAA,CAAA,SAAJ,EAAI,cAAJ,EAAgB;AMwCd,AFnCG,GEgCQ,CFhCF,CEoCT,IFpCc,AJLhB,GIKmB,CACnB,CADmB,EAChB,CADgB,CEgCN,CAAb,AF/BM,CADa,EACV,CADU,CJLnB,CIMY,CADO,EACJ,CADI,EACD,CADC,EACE,CADF,EACK,CADL,EACQ,CADR,EAEnB,CAFmB,EAEhB,CAFgB,EAEb,CAFa,EAEV,CAFU,EAEP,CAFO,EAEJ,CAFI,EAED,CAFC,EAEE,CAFF,EAEK,CAFL,EAEQ,CAFR,EAGnB,CAHmB,EAGhB,CAHgB,EAGb,CAHa,EAGV,CAHU,EAGP,CAHO,EAGJ,CAHI,EAGD,CAHC,EAGE,CAHF,EAGK,CAHL,EAGQ,CAHR,EAInB,CAJmB,EAIhB,CAJgB,EAIb,CAJa,EAIV,CAJU,EAIP,CAJO,EAIJ,CAJI,EAID,CAJC,EAIE,CAJF,EAIK,CAJL,EAIQ,CAJR,EAKnB,CALmB,EAKhB,CALgB,EAKb,CALa,EAKV,CALU,EAKP,CALO,EAKJ,CALI,EAKD,CALC,EAKE,CALF,EAKK,CALL,EAKQ,CALR,EAMnB,CANmB,EAMhB,CANgB,EAMb,CANa,EAMV,CANU,EAMP,CANO,EAMJ,CANI,EAMD,CANC,EAME,CANF,EAMK,CANL,EAMQ,CANR,CAAd;AEuCL,AN3CE,MM2CI,MAAM,CN3CH,EM2CM,GN3CD,CM2CK,ON3CjB,QM2Ca,CACb,mBADa,EAEb,mBAFa,EAGb,oBAHa,EAIb;AACE,AN/CH,IM+CG,CAAC,ANjDW,EMiDT,oBADL;AAEE,IAAA,CAAC,EAAE,IAAI,CAAC,MAAL,CAAY,ENlDH,IMkDT,GAAqB,oBAArB,GAAqC;AAF1C,GAJa,EAQb,eARa,CAAf;AAWA,ANvDgB,EMuDhB,CNvDA,OMuDQ,CAAC,IAAD,EAAO,MAAP,EAAe,MAAf,EAAuB,IAAvB,EAA6B,SAA7B,CAAR;AACD,ANpDC,EMsDF,ANtDE,MAAA,CAAA,cAAA,CAAI,MAAA,CAAA,SAAJ,EAAI,eAAJ,EAAiB;SAAjB,eAAA;AACE,aAAO,KAAK,SAAZ;AMsDJ,ANrDG,IMqDG,CNvDa,GMuDT,GAAG,IAAI,sBAAJ,CAAe,YAAf,CAAb;AACA,IAAI,CAAC,eAAL,CAAqB,ANxDF,SMwDnB;;ANxDmB,GAAjB;;AAIA,EAAA,MAAA,CAAA,SAAA,CAAA,UAAA,GAAA,YAAA;AACE,QAAI,KAAK,QAAT,EAAmB,KAAK,GAAL,CAAS,CAAT,IAAc,KAAK,KAAnB;AACnB,QAAI,KAAK,SAAT,EAAoB,KAAK,GAAL,CAAS,CAAT,IAAc,KAAK,KAAnB;AACrB,GAHD;;AAgBF,SAAA,MAAA;AAhEA,CAAA,EAAA;;eAkEe","file":"src.77de5100.js","sourceRoot":"../src","sourcesContent":["import { Brick, Paddle, Ball } from \"../sprites\"; // Types\n\nexport class CanvasView {\n  canvas: HTMLCanvasElement;\n  private context: CanvasRenderingContext2D | null;\n  private scoreDisplay: HTMLObjectElement | null;\n  private start: HTMLObjectElement | null;\n  private info: HTMLObjectElement | null;\n\n  constructor(canvasName: string) {\n    this.canvas = document.querySelector(canvasName) as HTMLCanvasElement;\n    this.context = this.canvas.getContext(\"2d\");\n    this.scoreDisplay = document.querySelector(\"#score\");\n    this.start = document.querySelector(\"#start\");\n    this.info = document.querySelector(\"#info\");\n  }\n\n  clear(): void {\n    this.context?.clearRect(0, 0, this.canvas.width, this.canvas.height);\n  }\n\n  initStartButton(startFunction: (view: CanvasView) => void): void {\n    this.start?.addEventListener(\"click\", () => startFunction(this));\n  }\n\n  drawScore(score: number): void {\n    this.scoreDisplay && (this.scoreDisplay.innerHTML = score.toString());\n  }\n\n  drawInfo(text: string): void {\n    this.info && (this.info.innerHTML = text);\n  }\n\n  drawSprite(brick: Brick | Paddle | Ball): void {\n    if (!brick) return;\n\n    this.context?.drawImage(\n      brick.image,\n      brick.pos.x,\n      brick.pos.y,\n      brick.width,\n      brick.height\n    );\n  }\n\n  drawBricks(bricks: Brick[]): void {\n    bricks.forEach((brick) => this.drawSprite(brick));\n  }\n}\n","import { Vector } from \"../types\";\n\nexport class Brick {\n  private brickImage: HTMLImageElement = new Image();\n\n  constructor(\n    private brickWidth: number,\n    private brickHeight: number,\n    private position: Vector,\n    private brickEnergy: number,\n    image: string\n  ) {\n    this.brickWidth = brickWidth;\n    this.brickHeight = brickHeight;\n    this.position = position;\n    this.brickEnergy = brickEnergy;\n    this.brickImage.src = image;\n  }\n\n  get width(): number {\n    return this.brickWidth;\n  }\n  get height(): number {\n    return this.brickHeight;\n  }\n  get pos(): Vector {\n    return this.position;\n  }\n  get image(): HTMLImageElement {\n    return this.brickImage;\n  }\n  get energy(): number {\n    return this.brickEnergy;\n  }\n\n  set energy(energy: number) {\n    this.brickEnergy = energy;\n  }\n}\n\nexport default Brick;\n","import { Vector } from \"../types\";\n\nclass Paddle {\n  private paddleImage: HTMLImageElement = new Image();\n  private moveLeft: boolean;\n  private moveRight: boolean;\n\n  constructor(\n    private speed: number,\n    private paddleWidth: number,\n    private paddleHeight: number,\n    private position: Vector,\n    image: string\n  ) {\n    this.speed = speed;\n    this.paddleWidth = paddleWidth;\n    this.paddleHeight = paddleHeight;\n    this.position = position;\n    this.moveLeft = false;\n    this.moveRight = false;\n    this.paddleImage.src = image;\n\n    document.addEventListener(\"keydown\", this.handleKeyDown);\n    document.addEventListener(\"keyup\", this.handleKeyUp);\n  }\n\n  get width(): number {\n    return this.paddleWidth;\n  }\n\n  get height(): number {\n    return this.paddleHeight;\n  }\n\n  get pos(): Vector {\n    return this.position;\n  }\n\n  get image(): HTMLImageElement {\n    return this.paddleImage;\n  }\n\n  get isMovingLeft(): boolean {\n    return this.moveLeft;\n  }\n\n  get isMovingRight(): boolean {\n    return this.moveRight;\n  }\n\n  movePaddle(): void {\n    if (this.moveLeft) this.pos.x -= this.speed;\n    if (this.moveRight) this.pos.x += this.speed;\n  }\n\n  handleKeyUp = (e: KeyboardEvent): void => {\n    if (e.code === \"ArrowLeft\" || e.key === \"ArrowLeft\") this.moveLeft = false;\n    if (e.code === \"ArrowRight\" || e.key === \"ArrowRight\")\n      this.moveRight = false;\n  };\n\n  handleKeyDown = (e: KeyboardEvent): void => {\n    if (e.code === \"ArrowLeft\" || e.key === \"ArrowLeft\") this.moveLeft = true;\n    if (e.code === \"ArrowRight\" || e.key === \"ArrowRight\")\n      this.moveRight = true;\n  };\n}\n\nexport default Paddle;\n","import { Vector } from \"../types\";\n\nclass Ball {\n  private speed: Vector;\n  private ballImage: HTMLImageElement = new Image();\n\n  constructor(\n    speed: number,\n    private ballSize: number,\n    private position: Vector,\n    image: string\n  ) {\n    this.ballSize = ballSize;\n    this.position = position;\n    this.speed = {\n      x: speed,\n      y: -speed,\n    };\n    this.ballImage.src = image;\n  }\n\n  get width(): number {\n    return this.ballSize;\n  }\n\n  get height(): number {\n    return this.ballSize;\n  }\n\n  get pos(): Vector {\n    return this.position;\n  }\n\n  get image(): HTMLImageElement {\n    return this.ballImage;\n  }\n\n  changeYDirection(): void {\n    this.speed.y = -this.speed.y;\n  }\n\n  changeXDirection(): void {\n    this.speed.x = -this.speed.x;\n  }\n\n  moveBall(): void {\n    this.pos.x += this.speed.x;\n    this.pos.y += this.speed.y;\n  }\n}\n\nexport default Ball;\n","export { default as Brick } from \"./Brick\";\nexport { default as Paddle } from \"./Paddle\";\nexport { default as Ball } from \"./Ball\";\n","import { Brick, Ball, Paddle } from \"./sprites\"; // Types\nimport { CanvasView } from \"./view/CanvasView\"; // Class\n\nexport class Collision {\n  isCollidingBrick(ball: Ball, brick: Brick): boolean {\n    if (\n      ball.pos.x < brick.pos.x + brick.width &&\n      ball.pos.x + ball.width > brick.pos.x &&\n      ball.pos.y < brick.pos.y + brick.height &&\n      ball.pos.y + ball.height > brick.pos.y\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  isCollidingBricks(ball: Ball, bricks: Brick[]): boolean {\n    let colliding = false;\n\n    bricks.forEach((brick, i) => {\n      if (this.isCollidingBrick(ball, brick)) {\n        ball.changeYDirection();\n\n        if (brick.energy === 1) {\n          bricks.splice(i, 1);\n        } else {\n          brick.energy -= 1;\n        }\n        colliding = true;\n      }\n    });\n    return colliding;\n  }\n\n  checkBallCollision(ball: Ball, paddle: Paddle, view: CanvasView): void {\n    // Chacking ball collision with paddle\n    if (\n      ball.pos.x + ball.width > paddle.pos.x &&\n      ball.pos.x < paddle.pos.x + paddle.width &&\n      ball.pos.y + ball.height === paddle.pos.y\n    ) {\n      ball.changeYDirection();\n    }\n    // Checking ball collision with the wall\n    if (ball.pos.x > view.canvas.width - ball.width || ball.pos.x < 0) {\n      ball.changeXDirection();\n    }\n    // Ball movement in Y constrain\n    if (ball.pos.y < 0) {\n      ball.changeYDirection();\n    }\n  }\n}\n","import RED_BRICK_IMAGE from './images/brick-red.png';\nimport BLUE_BRICK_IMAGE from './images/brick-blue.png';\nimport GREEN_BRICK_IMAGE from './images/brick-green.png';\nimport YELLOW_BRICK_IMAGE from './images/brick-yellow.png';\nimport PURPLE_BRICK_IMAGE from './images/brick-purple.png';\n\n// Grab the canvas element for calculating the brick width\n// depending on canvas width\nconst canvas: HTMLCanvasElement | null = document.querySelector('#playField');\n\n// Constants\nexport const STAGE_PADDING = 10;\nexport const STAGE_ROWS = 20;\nexport const STAGE_COLS = 10;\nexport const BRICK_PADDING = 5;\nexport const BRICK_WIDTH = canvas\n  ? Math.floor((canvas.width - STAGE_PADDING * 2) / STAGE_COLS) - BRICK_PADDING\n  : 100;\nexport const BRICK_HEIGHT = canvas\n  ? Math.floor((canvas.height - STAGE_PADDING * 2) / STAGE_ROWS) - BRICK_PADDING\n  : 30;\nexport const PADDLE_WIDTH = 150;\nexport const PADDLE_HEIGHT = 25;\nexport const PADDLE_STARTX = 450;\nexport const PADDLE_SPEED = 10;\nexport const BALL_SPEED = 5;\nexport const BALL_SIZE = 20;\nexport const BALL_STARTX = 500;\nexport const BALL_STARTY = 400;\n\nexport const BRICK_IMAGES: { [key: number]: string } = {\n  1: RED_BRICK_IMAGE,\n  2: GREEN_BRICK_IMAGE,\n  3: YELLOW_BRICK_IMAGE,\n  4: BLUE_BRICK_IMAGE,\n  5: PURPLE_BRICK_IMAGE\n};\n\nexport const BRICK_ENERGY: { [key: number]: number } = {\n  1: 1, // Red brick\n  2: 1, // Green brick\n  3: 2, // Yellow brick\n  4: 2, // Blue brick\n  5: 3 // Purple brick\n};\n\n// prettier-ignore\nexport const LEVEL = [\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 1, 1, 1, 1, 1, 1, 0, 0,\n  0, 2, 2, 2, 2, 2, 2, 2, 2, 0,\n  0, 3, 3, 3, 3, 3, 3, 3, 3, 0,\n  0, 0, 4, 4, 4, 4, 4, 4, 0, 0, \n  0, 0, 5, 5, 0, 0, 5, 5, 0, 0,\n];\n","import {\n  BRICK_IMAGES,\n  STAGE_COLS,\n  STAGE_PADDING,\n  BRICK_WIDTH,\n  BRICK_HEIGHT,\n  BRICK_PADDING,\n  BRICK_ENERGY,\n  LEVEL,\n} from \"./setup\";\nimport { Brick } from \"./sprites/Brick\";\n\nexport function createBricks(): Brick[] {\n  return LEVEL.reduce((acc, element, itarator) => {\n    const row = Math.floor((itarator + 1) / STAGE_COLS);\n    const col = itarator % STAGE_COLS;\n\n    const x = STAGE_PADDING + col * (BRICK_WIDTH + BRICK_PADDING);\n    const y = STAGE_PADDING + row * (BRICK_HEIGHT + BRICK_PADDING);\n\n    if (element === 0) return acc;\n\n    return [\n      ...acc,\n      new Brick(\n        BRICK_WIDTH,\n        BRICK_HEIGHT,\n        { x, y },\n        BRICK_ENERGY[element],\n        BRICK_IMAGES[element]\n      ),\n    ];\n  }, [] as Brick[]);\n}\n","import { CanvasView } from \"./view/CanvasView\";\nimport { Ball, Brick, Paddle } from \"./sprites\"; // Types\nimport { Collision } from \"./Collision\";\n\nimport PADDLE_IMAGE from \"./images/paddle.png\";\nimport BALL_IMAGE from \"./images/ball.png\";\n\nimport {\n  PADDLE_SPEED,\n  PADDLE_WIDTH,\n  PADDLE_HEIGHT,\n  PADDLE_STARTX,\n  BALL_SPEED,\n  BALL_SIZE,\n  BALL_STARTX,\n  BALL_STARTY,\n} from \"./setup\";\n\nimport { createBricks } from \"./helpers\";\n\nlet gameOver = false;\nlet score = 0;\n\nfunction setGameOver(view: CanvasView) {\n  view.drawInfo(\"Game Over!\");\n  gameOver = false;\n}\n\nfunction setGameWin(view: CanvasView) {\n  view.drawInfo(\"Victory!\");\n  gameOver = false;\n}\n\nfunction gameLoop(\n  view: CanvasView,\n  bricks: Brick[],\n  paddle: Paddle,\n  ball: Ball,\n  collision: Collision\n) {\n  view.clear();\n  view.drawBricks(bricks);\n  view.drawSprite(paddle);\n  view.drawSprite(ball);\n\n  ball.moveBall();\n\n  if (\n    (paddle.isMovingLeft && paddle.pos.x > 0) ||\n    (paddle.isMovingRight && paddle.pos.x < view.canvas.width - paddle.width)\n  ) {\n    paddle.movePaddle();\n  }\n\n  collision.checkBallCollision(ball, paddle, view);\n  const collidingBrick = collision.isCollidingBricks(ball, bricks);\n\n  if (collidingBrick) {\n    score += 1;\n    view.drawScore(score);\n  }\n\n  if (ball.pos.y > view.canvas.height) gameOver = true;\n  if (bricks.length === 0) return setGameWin(view);\n  // Quit the canvas movement when game over\n  if (gameOver) return setGameOver(view);\n\n  requestAnimationFrame(() => gameLoop(view, bricks, paddle, ball, collision));\n}\n\nfunction startGame(view: CanvasView) {\n  score = 0;\n  view.drawInfo(\"\");\n  view.drawScore(0);\n\n  const collision = new Collision();\n\n  const bricks = createBricks();\n\n  const ball = new Ball(\n    BALL_SPEED,\n    BALL_SIZE,\n    { x: BALL_STARTX, y: BALL_STARTY },\n    BALL_IMAGE\n  );\n\n  const paddle = new Paddle(\n    PADDLE_SPEED,\n    PADDLE_WIDTH,\n    PADDLE_HEIGHT,\n    {\n      x: PADDLE_STARTX,\n      y: view.canvas.height - PADDLE_HEIGHT - 5,\n    },\n    PADDLE_IMAGE\n  );\n\n  gameLoop(view, bricks, paddle, ball, collision);\n}\n\n// New views\nconst view = new CanvasView(\"#playField\");\nview.initStartButton(startGame);\n"]}